services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - NUXT_PUBLIC_API_BASE_URL=${NUXT_PUBLIC_API_BASE_URL}
      - NUXT_PUBLIC_BACKEND_URL=${NUXT_PUBLIC_BACKEND_URL}
      - NUXT_PUBLIC_BACKEND_HOST=${NUXT_PUBLIC_BACKEND_HOST}
      - NUXT_PUBLIC_BACKEND_PORT=${NUXT_PUBLIC_BACKEND_PORT}
    depends_on:
      - backend
    networks:
      - esg-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${BACKEND_PORT:-8080}:80"
    environment:
      - CI_ENVIRONMENT=production
      - DB_HOSTNAME=mysql
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - esg-network

  mysql:
    image: mysql:8.0
    container_name: esg250930_mysql
    restart: always
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - esg-network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: esg250930_phpmyadmin
    restart: always
    ports:
      - "${PHPMYADMIN_PORT:-9402}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ABSOLUTE_URI: ${PHPMYADMIN_URL}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - esg-network

networks:
  esg-network:
    driver: bridge

volumes:
  mysql_data:
