services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    user: "1000:1000"  # Run as user jarvis (UID 1000)
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - BACKEND_URL=${BACKEND_URL:-http://backend:80}
    depends_on:
      - backend
    networks:
      - esg-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${BACKEND_PORT}:80"
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor  # Preserve vendor directory from Docker build
    environment:
      - CI_ENVIRONMENT=${CI_ENVIRONMENT}
      - DB_HOSTNAME=mysql
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - mysql
    networks:
      - esg-network

  mysql:
    image: mysql:8.0
    container_name: esg_mysql
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - esg-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: esg_phpmyadmin
    restart: always
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - esg-network

networks:
  esg-network:
    driver: bridge

volumes:
  mysql_data: