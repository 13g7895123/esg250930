{"version":3,"file":"profile-CM_yff84.js","sources":["../../../../composables/useAuth.js","../../../../pages/profile.vue"],"sourcesContent":["/**\r\n * Authentication API composable - Updated to match Laravel backend\r\n */\r\nexport const useAuth = () => {\r\n  const { post, get, put } = useApi()\r\n\r\n  /**\r\n   * Login user with email/username and password\r\n   */\r\n  const login = async (credentials) => {\r\n    const loginData = {\r\n      login: credentials.username || credentials.email, // Backend expects 'login' field\r\n      password: credentials.password\r\n    }\r\n    return await post('/auth/login', loginData)\r\n  }\r\n\r\n  /**\r\n   * Register new user\r\n   */\r\n  const register = async (userData) => {\r\n    return await post('/auth/register', userData)\r\n  }\r\n\r\n  /**\r\n   * Logout current user\r\n   */\r\n  const logout = async () => {\r\n    return await post('/auth/logout')\r\n  }\r\n\r\n  /**\r\n   * Logout from all devices\r\n   */\r\n  const logoutAll = async () => {\r\n    return await post('/auth/logout-all')\r\n  }\r\n\r\n  /**\r\n   * Get current authenticated user data\r\n   */\r\n  const getCurrentUser = async () => {\r\n    return await get('/auth/me')\r\n  }\r\n\r\n  /**\r\n   * Update user profile (using profile endpoint)\r\n   */\r\n  const updateProfile = async (profileData) => {\r\n    return await put('/profile', profileData)\r\n  }\r\n\r\n  /**\r\n   * Change password\r\n   */\r\n  const changePassword = async (passwordData) => {\r\n    return await post('/auth/change-password', passwordData)\r\n  }\r\n\r\n  /**\r\n   * Refresh authentication token\r\n   */\r\n  const refreshToken = async () => {\r\n    return await post('/auth/refresh')\r\n  }\r\n\r\n  /**\r\n   * Request password reset (if implemented in backend)\r\n   */\r\n  const requestPasswordReset = async (email) => {\r\n    return await post('/auth/forgot-password', { email })\r\n  }\r\n\r\n  /**\r\n   * Reset password with token (if implemented in backend)\r\n   */\r\n  const resetPassword = async (resetData) => {\r\n    return await post('/auth/reset-password', resetData)\r\n  }\r\n\r\n  /**\r\n   * Verify email address (if implemented in backend)\r\n   */\r\n  const verifyEmail = async (token) => {\r\n    return await post('/auth/verify-email', { token })\r\n  }\r\n\r\n  /**\r\n   * Check if user is authenticated by trying to fetch user data\r\n   */\r\n  const checkAuth = async () => {\r\n    try {\r\n      const response = await getCurrentUser()\r\n      return response.success && response.data?.user\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate authentication token\r\n   */\r\n  const validateToken = async () => {\r\n    return await checkAuth()\r\n  }\r\n\r\n  return {\r\n    // Core authentication\r\n    login,\r\n    register,\r\n    logout,\r\n    logoutAll,\r\n    getCurrentUser,\r\n    checkAuth,\r\n    validateToken,\r\n    \r\n    // Profile management\r\n    updateProfile,\r\n    changePassword,\r\n    \r\n    // Token management\r\n    refreshToken,\r\n    \r\n    // Password reset (optional - depends on backend implementation)\r\n    requestPasswordReset,\r\n    resetPassword,\r\n    \r\n    // Email verification (optional - depends on backend implementation)\r\n    verifyEmail\r\n  }\r\n}","<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Header -->\r\n    <div>\r\n      <h1 class=\"text-2xl font-bold text-gray-900 dark:text-white\">{{ t('profile.title') }}</h1>\r\n      <p class=\"text-gray-600 dark:text-gray-300\">{{ t('profile.subtitle') }}</p>\r\n    </div>\r\n\r\n    <!-- Profile Content -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n      <!-- Left Column - Profile Card -->\r\n      <div class=\"lg:col-span-1\">\r\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg-custom shadow-sm p-6\">\r\n          <!-- Avatar Section -->\r\n          <div class=\"text-center mb-6\">\r\n            <div class=\"relative inline-block\">\r\n              <img\r\n                :src=\"profileForm.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(profileForm.name || 'User')}&background=6366f1&color=fff`\"\r\n                :alt=\"profileForm.name || 'User Avatar'\"\r\n                class=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover border-4 border-white dark:border-gray-700 shadow-lg\"\r\n              />\r\n              <label\r\n                for=\"avatar-upload\"\r\n                class=\"absolute bottom-0 right-0 bg-primary-600 hover:bg-primary-700 text-white rounded-full p-2 cursor-pointer shadow-lg transition-colors duration-200\"\r\n              >\r\n                <CameraIcon class=\"w-4 h-4\" />\r\n                <input\r\n                  id=\"avatar-upload\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  @change=\"handleAvatarUpload\"\r\n                  class=\"hidden\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">{{ profileForm.name || 'User' }}</h3>\r\n            <p class=\"text-sm text-gray-500 dark:text-gray-400\">@{{ profileForm.username }}</p>\r\n            <div class=\"mt-2\">\r\n              <span \r\n                class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\"\r\n                :class=\"{\r\n                  'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200': user?.status === 'active',\r\n                  'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200': user?.status === 'inactive'\r\n                }\"\r\n              >\r\n                {{ user?.status === 'active' ? t('profile.active') : t('profile.inactive') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Quick Avatar Actions -->\r\n          <div class=\"space-y-2 mb-6\">\r\n            <button\r\n              @click=\"triggerAvatarUpload\"\r\n              class=\"w-full px-4 py-2 text-sm font-medium text-primary-600 bg-primary-50 hover:bg-primary-100 dark:bg-primary-900 dark:text-primary-200 rounded-lg transition-colors duration-200\"\r\n            >\r\n              <CameraIcon class=\"w-4 h-4 inline mr-2\" />\r\n              {{ t('profile.change_avatar') }}\r\n            </button>\r\n            <button\r\n              v-if=\"profileForm.avatar && !isDefaultAvatar(profileForm.avatar)\"\r\n              @click=\"removeAvatar\"\r\n              class=\"w-full px-4 py-2 text-sm font-medium text-red-600 bg-red-50 hover:bg-red-100 dark:bg-red-900 dark:text-red-200 rounded-lg transition-colors duration-200\"\r\n            >\r\n              <TrashIcon class=\"w-4 h-4 inline mr-2\" />\r\n              {{ t('profile.remove_avatar') }}\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Account Info -->\r\n          <div class=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\r\n            <h4 class=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">{{ t('profile.account_info') }}</h4>\r\n            <div class=\"space-y-3\">\r\n              <div class=\"flex justify-between text-sm\">\r\n                <span class=\"text-gray-500 dark:text-gray-400\">{{ t('profile.role') }}</span>\r\n                <span class=\"text-gray-900 dark:text-white font-medium\">\r\n                  {{ user?.role === 'admin' ? t('auth.role_admin') : t('auth.role_user') }}\r\n                </span>\r\n              </div>\r\n              <div class=\"flex justify-between text-sm\">\r\n                <span class=\"text-gray-500 dark:text-gray-400\">{{ t('profile.member_since') }}</span>\r\n                <span class=\"text-gray-900 dark:text-white\">{{ formatDate(user?.createdAt) }}</span>\r\n              </div>\r\n              <div class=\"flex justify-between text-sm\">\r\n                <span class=\"text-gray-500 dark:text-gray-400\">{{ t('profile.last_login') }}</span>\r\n                <span class=\"text-gray-900 dark:text-white\">{{ formatDate(user?.lastLogin) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right Column - Forms -->\r\n      <div class=\"lg:col-span-2 space-y-6\">\r\n        <!-- Personal Information Form -->\r\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg-custom shadow-sm\">\r\n          <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{{ t('profile.personal_info') }}</h3>\r\n          </div>\r\n          <form @submit.prevent=\"updateProfile\" class=\"p-6 space-y-6\">\r\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <!-- Name -->\r\n              <div>\r\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.name') }} <span class=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"name\"\r\n                  v-model=\"profileForm.name\"\r\n                  type=\"text\"\r\n                  required\r\n                  :class=\"getInputClasses(profileErrors.name)\"\r\n                  :placeholder=\"t('profile.name_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.name\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.name }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Username -->\r\n              <div>\r\n                <label for=\"username\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.username') }} <span class=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"username\"\r\n                  v-model=\"profileForm.username\"\r\n                  type=\"text\"\r\n                  required\r\n                  :class=\"getInputClasses(profileErrors.username)\"\r\n                  :placeholder=\"t('profile.username_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.username\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.username }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Email -->\r\n              <div>\r\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.email') }} <span class=\"text-red-500\">*</span>\r\n                </label>\r\n                <div class=\"relative\">\r\n                  <input\r\n                    id=\"email\"\r\n                    v-model=\"profileForm.email\"\r\n                    type=\"email\"\r\n                    required\r\n                    :class=\"getInputClasses(profileErrors.email)\"\r\n                    :placeholder=\"t('profile.email_placeholder')\"\r\n                  />\r\n                  <div class=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\r\n                    <CheckCircleIcon \r\n                      v-if=\"user?.emailVerified\" \r\n                      class=\"w-5 h-5 text-green-500\" \r\n                      :title=\"t('profile.email_verified')\"\r\n                    />\r\n                    <ExclamationCircleIcon \r\n                      v-else \r\n                      class=\"w-5 h-5 text-yellow-500\" \r\n                      :title=\"t('profile.email_unverified')\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p v-if=\"profileErrors.email\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.email }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Phone -->\r\n              <div>\r\n                <label for=\"phone\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.phone') }}\r\n                </label>\r\n                <input\r\n                  id=\"phone\"\r\n                  v-model=\"profileForm.phone\"\r\n                  type=\"tel\"\r\n                  :class=\"getInputClasses(profileErrors.phone)\"\r\n                  :placeholder=\"t('profile.phone_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.phone\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.phone }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Company -->\r\n              <div>\r\n                <label for=\"company\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.company') }}\r\n                </label>\r\n                <input\r\n                  id=\"company\"\r\n                  v-model=\"profileForm.company\"\r\n                  type=\"text\"\r\n                  :class=\"getInputClasses(profileErrors.company)\"\r\n                  :placeholder=\"t('profile.company_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.company\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.company }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Position -->\r\n              <div>\r\n                <label for=\"position\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.position') }}\r\n                </label>\r\n                <input\r\n                  id=\"position\"\r\n                  v-model=\"profileForm.position\"\r\n                  type=\"text\"\r\n                  :class=\"getInputClasses(profileErrors.position)\"\r\n                  :placeholder=\"t('profile.position_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.position\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.position }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Location -->\r\n              <div>\r\n                <label for=\"location\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.location') }}\r\n                </label>\r\n                <input\r\n                  id=\"location\"\r\n                  v-model=\"profileForm.location\"\r\n                  type=\"text\"\r\n                  :class=\"getInputClasses(profileErrors.location)\"\r\n                  :placeholder=\"t('profile.location_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.location\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.location }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Website -->\r\n              <div>\r\n                <label for=\"website\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.website') }}\r\n                </label>\r\n                <input\r\n                  id=\"website\"\r\n                  v-model=\"profileForm.website\"\r\n                  type=\"url\"\r\n                  :class=\"getInputClasses(profileErrors.website)\"\r\n                  :placeholder=\"t('profile.website_placeholder')\"\r\n                />\r\n                <p v-if=\"profileErrors.website\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ profileErrors.website }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Bio -->\r\n            <div>\r\n              <label for=\"bio\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                {{ t('profile.bio') }}\r\n              </label>\r\n              <textarea\r\n                id=\"bio\"\r\n                v-model=\"profileForm.bio\"\r\n                rows=\"4\"\r\n                :class=\"getTextareaClasses(profileErrors.bio)\"\r\n                :placeholder=\"t('profile.bio_placeholder')\"\r\n              />\r\n              <p v-if=\"profileErrors.bio\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                {{ profileErrors.bio }}\r\n              </p>\r\n            </div>\r\n\r\n            <!-- Submit Button -->\r\n            <div class=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                :disabled=\"isUpdatingProfile\"\r\n                class=\"px-6 py-2 bg-primary-600 hover:bg-primary-700 disabled:bg-primary-400 text-white font-medium rounded-lg transition-colors duration-200\"\r\n              >\r\n                <span v-if=\"isUpdatingProfile\">{{ t('common.loading') }}</span>\r\n                <span v-else>{{ t('profile.update_profile') }}</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <!-- Password Change Form -->\r\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg-custom shadow-sm\">\r\n          <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{{ t('profile.security') }}</h3>\r\n          </div>\r\n          <form @submit.prevent=\"changePassword\" class=\"p-6 space-y-6\">\r\n            <!-- Current Password -->\r\n            <div>\r\n              <label for=\"current-password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                {{ t('profile.current_password') }} <span class=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"current-password\"\r\n                v-model=\"passwordForm.currentPassword\"\r\n                type=\"password\"\r\n                required\r\n                :class=\"getInputClasses(passwordErrors.currentPassword)\"\r\n                :placeholder=\"t('profile.current_password_placeholder')\"\r\n              />\r\n              <p v-if=\"passwordErrors.currentPassword\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                {{ passwordErrors.currentPassword }}\r\n              </p>\r\n            </div>\r\n\r\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <!-- New Password -->\r\n              <div>\r\n                <label for=\"new-password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.new_password') }} <span class=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"new-password\"\r\n                  v-model=\"passwordForm.newPassword\"\r\n                  type=\"password\"\r\n                  required\r\n                  :class=\"getInputClasses(passwordErrors.newPassword)\"\r\n                  :placeholder=\"t('profile.new_password_placeholder')\"\r\n                />\r\n                <p v-if=\"passwordErrors.newPassword\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ passwordErrors.newPassword }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Confirm New Password -->\r\n              <div>\r\n                <label for=\"confirm-password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  {{ t('profile.confirm_new_password') }} <span class=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"confirm-password\"\r\n                  v-model=\"passwordForm.confirmPassword\"\r\n                  type=\"password\"\r\n                  required\r\n                  :class=\"getInputClasses(passwordErrors.confirmPassword)\"\r\n                  :placeholder=\"t('profile.confirm_new_password_placeholder')\"\r\n                />\r\n                <p v-if=\"passwordErrors.confirmPassword\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n                  {{ passwordErrors.confirmPassword }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Password Requirements -->\r\n            <div class=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\r\n              <p class=\"text-sm text-blue-800 dark:text-blue-200\">\r\n                <InformationCircleIcon class=\"w-4 h-4 inline mr-1\" />\r\n                {{ t('profile.password_requirements') }}\r\n              </p>\r\n            </div>\r\n\r\n            <!-- Submit Button -->\r\n            <div class=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                :disabled=\"isChangingPassword\"\r\n                class=\"px-6 py-2 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white font-medium rounded-lg transition-colors duration-200\"\r\n              >\r\n                <span v-if=\"isChangingPassword\">{{ t('common.loading') }}</span>\r\n                <span v-else>{{ t('profile.change_password') }}</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <!-- Danger Zone -->\r\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg-custom shadow-sm border-2 border-red-200 dark:border-red-900\">\r\n          <div class=\"px-6 py-4 border-b border-red-200 dark:border-red-900\">\r\n            <h3 class=\"text-lg font-medium text-red-900 dark:text-red-200\">{{ t('profile.danger_zone') }}</h3>\r\n          </div>\r\n          <div class=\"p-6\">\r\n            <div class=\"flex items-start space-x-4\">\r\n              <div class=\"flex-shrink-0\">\r\n                <ExclamationTriangleIcon class=\"w-8 h-8 text-red-500\" />\r\n              </div>\r\n              <div class=\"flex-1\">\r\n                <h4 class=\"text-base font-medium text-gray-900 dark:text-white mb-2\">{{ t('profile.delete_account') }}</h4>\r\n                <p class=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\r\n                  {{ t('profile.delete_account_warning') }}\r\n                </p>\r\n                <button\r\n                  @click=\"showDeleteConfirm = true\"\r\n                  class=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition-colors duration-200\"\r\n                >\r\n                  {{ t('profile.delete_account') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div\r\n      v-if=\"showDeleteConfirm\"\r\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n      @click=\"showDeleteConfirm = false\"\r\n    >\r\n      <div\r\n        class=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full p-6\"\r\n        @click.stop\r\n      >\r\n        <div class=\"flex items-center mb-4\">\r\n          <ExclamationTriangleIcon class=\"w-6 h-6 text-red-500 mr-3\" />\r\n          <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{{ t('profile.confirm_delete') }}</h3>\r\n        </div>\r\n        <p class=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\r\n          {{ t('profile.delete_confirmation') }}\r\n        </p>\r\n        <input\r\n          v-model=\"deleteConfirmPassword\"\r\n          type=\"password\"\r\n          :placeholder=\"t('profile.current_password_placeholder')\"\r\n          class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg mb-4 dark:bg-gray-700 dark:text-white\"\r\n        />\r\n        <div class=\"flex justify-end space-x-3\">\r\n          <button\r\n            @click=\"showDeleteConfirm = false\"\r\n            class=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n          >\r\n            {{ t('common.cancel') }}\r\n          </button>\r\n          <button\r\n            @click=\"deleteAccount\"\r\n            :disabled=\"!deleteConfirmPassword || isDeletingAccount\"\r\n            class=\"px-4 py-2 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white rounded-lg\"\r\n          >\r\n            {{ isDeletingAccount ? t('common.loading') : t('common.delete') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Success/Error Messages -->\r\n    <div\r\n      v-if=\"message\"\r\n      class=\"fixed bottom-4 right-4 z-50 p-4 rounded-lg shadow-lg\"\r\n      :class=\"message.type === 'success' ? 'bg-green-600 text-white' : 'bg-red-600 text-white'\"\r\n    >\r\n      {{ message.text }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Page metadata\r\ndefinePageMeta({\r\n  middleware: 'auth'\r\n})\r\nimport {\r\n  CameraIcon,\r\n  TrashIcon,\r\n  CheckCircleIcon,\r\n  ExclamationCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  InformationCircleIcon\r\n} from '@heroicons/vue/24/outline'\r\n\r\n// Composables\r\nconst { t } = useI18n()\r\nconst { updateProfile: updateProfileAPI, changePassword: changePasswordAPI, getProfile } = useAuth()\r\nconst { del } = useApi()\r\nconst authStore = useAuthStore()\r\nconst { user } = storeToRefs(authStore)\r\n\r\n// Form data\r\nconst profileForm = reactive({\r\n  name: '',\r\n  username: '',\r\n  email: '',\r\n  phone: '',\r\n  bio: '',\r\n  website: '',\r\n  location: '',\r\n  company: '',\r\n  position: '',\r\n  avatar: ''\r\n})\r\n\r\nconst passwordForm = reactive({\r\n  currentPassword: '',\r\n  newPassword: '',\r\n  confirmPassword: ''\r\n})\r\n\r\n// Error handling\r\nconst profileErrors = ref({})\r\nconst passwordErrors = ref({})\r\n\r\n// Loading states\r\nconst isUpdatingProfile = ref(false)\r\nconst isChangingPassword = ref(false)\r\nconst isDeletingAccount = ref(false)\r\n\r\n// UI states\r\nconst showDeleteConfirm = ref(false)\r\nconst deleteConfirmPassword = ref('')\r\nconst message = ref(null)\r\n\r\n// Initialize profile data\r\nconst initializeProfile = () => {\r\n  if (user.value) {\r\n    Object.assign(profileForm, {\r\n      name: user.value.name || '',\r\n      username: user.value.username || '',\r\n      email: user.value.email || '',\r\n      phone: user.value.phone || '',\r\n      bio: user.value.bio || '',\r\n      website: user.value.website || '',\r\n      location: user.value.location || '',\r\n      company: user.value.company || '',\r\n      position: user.value.position || '',\r\n      avatar: user.value.avatar || ''\r\n    })\r\n  }\r\n}\r\n\r\n// Validation\r\nconst validateProfile = () => {\r\n  const errors = {}\r\n  \r\n  if (!profileForm.name?.trim()) {\r\n    errors.name = t('auth.full_name_placeholder')\r\n  }\r\n  \r\n  if (!profileForm.username?.trim()) {\r\n    errors.username = t('profile.username_placeholder')\r\n  }\r\n  \r\n  if (!profileForm.email?.trim()) {\r\n    errors.email = t('profile.email_placeholder')\r\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(profileForm.email)) {\r\n    errors.email = 'Please enter a valid email address'\r\n  }\r\n  \r\n  if (profileForm.website && !/^https?:\\/\\/.+/.test(profileForm.website)) {\r\n    errors.website = 'Please enter a valid URL (starting with http:// or https://)'\r\n  }\r\n  \r\n  profileErrors.value = errors\r\n  return Object.keys(errors).length === 0\r\n}\r\n\r\nconst validatePassword = () => {\r\n  const errors = {}\r\n  \r\n  if (!passwordForm.currentPassword?.trim()) {\r\n    errors.currentPassword = t('profile.current_password_placeholder')\r\n  }\r\n  \r\n  if (!passwordForm.newPassword?.trim()) {\r\n    errors.newPassword = t('profile.new_password_placeholder')\r\n  } else if (passwordForm.newPassword.length < 8) {\r\n    errors.newPassword = t('profile.password_requirements')\r\n  } else if (!/(?=.*[a-zA-Z])(?=.*\\d)/.test(passwordForm.newPassword)) {\r\n    errors.newPassword = t('profile.password_requirements')\r\n  }\r\n  \r\n  if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n    errors.confirmPassword = t('profile.passwords_not_match')\r\n  }\r\n  \r\n  passwordErrors.value = errors\r\n  return Object.keys(errors).length === 0\r\n}\r\n\r\n// Form submission handlers\r\nconst updateProfile = async () => {\r\n  if (!validateProfile()) return\r\n  \r\n  isUpdatingProfile.value = true\r\n  \r\n  try {\r\n    // Use the proper API method\r\n    const response = await updateProfileAPI({\r\n      name: profileForm.name,\r\n      username: profileForm.username,\r\n      email: profileForm.email,\r\n      phone: profileForm.phone,\r\n      bio: profileForm.bio,\r\n      website: profileForm.website,\r\n      location: profileForm.location,\r\n      company: profileForm.company,\r\n      position: profileForm.position\r\n    })\r\n    \r\n    if (response.success) {\r\n      showMessage('個人資料更新成功', 'success')\r\n    } else {\r\n      throw new Error(response.message || '個人資料更新失敗')\r\n    }\r\n  } catch (error) {\r\n    console.error('Profile update failed:', error)\r\n    showMessage(error.message || '個人資料更新失敗', 'error')\r\n  } finally {\r\n    isUpdatingProfile.value = false\r\n  }\r\n}\r\n\r\nconst changePassword = async () => {\r\n  if (!validatePassword()) return\r\n  \r\n  isChangingPassword.value = true\r\n  \r\n  try {\r\n    // Use the proper API method\r\n    const response = await changePasswordAPI({\r\n      current_password: passwordForm.currentPassword,\r\n      password: passwordForm.newPassword,\r\n      password_confirmation: passwordForm.confirmPassword\r\n    })\r\n    \r\n    if (response.success) {\r\n      // Clear form\r\n      Object.assign(passwordForm, {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      })\r\n      \r\n      showMessage('密碼修改成功', 'success')\r\n    } else {\r\n      throw new Error(response.message || '密碼修改失敗')\r\n    }\r\n  } catch (error) {\r\n    console.error('Password change failed:', error)\r\n    \r\n    // Handle specific validation errors\r\n    if (error.message.includes('Current password is incorrect')) {\r\n      passwordErrors.value.currentPassword = '目前密碼不正確'\r\n    } else {\r\n      showMessage(error.message || '密碼修改失敗', 'error')\r\n    }\r\n  } finally {\r\n    isChangingPassword.value = false\r\n  }\r\n}\r\n\r\n// Avatar handling\r\nconst triggerAvatarUpload = () => {\r\n  document.getElementById('avatar-upload')?.click()\r\n}\r\n\r\nconst handleAvatarUpload = (event) => {\r\n  const file = event.target.files?.[0]\r\n  if (!file) return\r\n  \r\n  // Validate file\r\n  if (!file.type.startsWith('image/')) {\r\n    showMessage('Please select a valid image file', 'error')\r\n    return\r\n  }\r\n  \r\n  if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n    showMessage('File size must be less than 5MB', 'error')\r\n    return\r\n  }\r\n  \r\n  // Create object URL for preview\r\n  const imageUrl = URL.createObjectURL(file)\r\n  profileForm.avatar = imageUrl\r\n  \r\n  showMessage(t('profile.avatar_updated'), 'success')\r\n}\r\n\r\nconst removeAvatar = () => {\r\n  profileForm.avatar = ''\r\n  showMessage(t('profile.avatar_removed'), 'success')\r\n}\r\n\r\nconst isDefaultAvatar = (avatarUrl) => {\r\n  return !avatarUrl || avatarUrl.includes('ui-avatars.com')\r\n}\r\n\r\n// Account deletion\r\nconst deleteAccount = async () => {\r\n  if (!deleteConfirmPassword.value) return\r\n  \r\n  isDeletingAccount.value = true\r\n  \r\n  try {\r\n    // Use the profile API to delete account\r\n    const response = await del('/profile', {\r\n      password: deleteConfirmPassword.value\r\n    })\r\n    \r\n    if (response.success) {\r\n      showMessage('帳號刪除成功', 'success')\r\n      // Logout after successful deletion\r\n      await authStore.logout()\r\n    } else {\r\n      throw new Error(response.message || '帳號刪除失敗')\r\n    }\r\n  } catch (error) {\r\n    console.error('Account deletion failed:', error)\r\n    \r\n    if (error.message.includes('password') || error.message.includes('incorrect')) {\r\n      showMessage('密碼不正確', 'error')\r\n    } else {\r\n      showMessage(error.message || '帳號刪除失敗', 'error')\r\n    }\r\n  } finally {\r\n    isDeletingAccount.value = false\r\n    showDeleteConfirm.value = false\r\n  }\r\n}\r\n\r\n// Utility functions\r\nconst formatDate = (date) => {\r\n  if (!date) return 'N/A'\r\n  return new Date(date).toLocaleDateString()\r\n}\r\n\r\nconst showMessage = (text, type = 'success') => {\r\n  message.value = { text, type }\r\n  setTimeout(() => {\r\n    message.value = null\r\n  }, 5000)\r\n}\r\n\r\nconst getInputClasses = (hasError) => {\r\n  const baseClasses = 'w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-0 dark:bg-gray-700 dark:text-white transition-colors duration-200'\r\n  \r\n  if (hasError) {\r\n    return `${baseClasses} border-red-300 dark:border-red-600 focus:border-red-500 focus:ring-red-500`\r\n  }\r\n  \r\n  return `${baseClasses} border-gray-300 dark:border-gray-600 focus:border-primary-500 focus:ring-primary-500`\r\n}\r\n\r\nconst getTextareaClasses = (hasError) => {\r\n  const baseClasses = 'w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-0 dark:bg-gray-700 dark:text-white transition-colors duration-200 resize-vertical'\r\n  \r\n  if (hasError) {\r\n    return `${baseClasses} border-red-300 dark:border-red-600 focus:border-red-500 focus:ring-red-500`\r\n  }\r\n  \r\n  return `${baseClasses} border-gray-300 dark:border-gray-600 focus:border-primary-500 focus:ring-primary-500`\r\n}\r\n\r\n// Lifecycle\r\nonMounted(() => {\r\n  initializeProfile()\r\n})\r\n\r\n// Watch for user changes\r\nwatch(user, () => {\r\n  initializeProfile()\r\n}, { deep: true })\r\n\r\n// Head\r\nuseHead({\r\n  title: computed(() => t('profile.title'))\r\n})\r\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrRenderComponent","_ssrInterpolate","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrRenderClass"],"mappings":";;;;;;;;;;;;;;;;;;AAGO,MAAM,UAAU,MAAM;AAC3B,QAAM,EAAE,MAAM,KAAK,IAAG,IAAK,OAAM;AAKjC,QAAM,QAAQ,OAAO,gBAAgB;AACnC,UAAM,YAAY;AAAA,MAChB,OAAO,YAAY,YAAY,YAAY;AAAA;AAAA,MAC3C,UAAU,YAAY;AAAA,IAC5B;AACI,WAAO,MAAM,KAAK,eAAe,SAAS;AAAA,EAC5C;AAKA,QAAM,WAAW,OAAO,aAAa;AACnC,WAAO,MAAM,KAAK,kBAAkB,QAAQ;AAAA,EAC9C;AAKA,QAAM,SAAS,YAAY;AACzB,WAAO,MAAM,KAAK,cAAc;AAAA,EAClC;AAKA,QAAM,YAAY,YAAY;AAC5B,WAAO,MAAM,KAAK,kBAAkB;AAAA,EACtC;AAKA,QAAM,iBAAiB,YAAY;AACjC,WAAO,MAAM,IAAI,UAAU;AAAA,EAC7B;AAKA,QAAM,gBAAgB,OAAO,gBAAgB;AAC3C,WAAO,MAAM,IAAI,YAAY,WAAW;AAAA,EAC1C;AAKA,QAAM,iBAAiB,OAAO,iBAAiB;AAC7C,WAAO,MAAM,KAAK,yBAAyB,YAAY;AAAA,EACzD;AAKA,QAAM,eAAe,YAAY;AAC/B,WAAO,MAAM,KAAK,eAAe;AAAA,EACnC;AAKA,QAAM,uBAAuB,OAAO,UAAU;AAC5C,WAAO,MAAM,KAAK,yBAAyB,EAAE,MAAK,CAAE;AAAA,EACtD;AAKA,QAAM,gBAAgB,OAAO,cAAc;AACzC,WAAO,MAAM,KAAK,wBAAwB,SAAS;AAAA,EACrD;AAKA,QAAM,cAAc,OAAO,UAAU;AACnC,WAAO,MAAM,KAAK,sBAAsB,EAAE,MAAK,CAAE;AAAA,EACnD;AAKA,QAAM,YAAY,YAAY;;AAC5B,QAAI;AACF,YAAM,WAAW,MAAM,eAAc;AACrC,aAAO,SAAS,aAAW,cAAS,SAAT,mBAAe;AAAA,IAC5C,SAAS,OAAO;AACd,aAAO;AAAA,IACT;AAAA,EACF;AAKA,QAAM,gBAAgB,YAAY;AAChC,WAAO,MAAM,UAAS;AAAA,EACxB;AAEA,SAAO;AAAA;AAAA,IAEL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,EACJ;AACA;;;;;AC+UA,UAAM,EAAE,EAAA,IAAM,QAAA;AAC6E,YAAA;AAC3E,WAAA;AAChB,UAAM,YAAY,aAAA;AAClB,UAAM,EAAE,KAAA,IAAS,YAAY,SAAS;AAGtC,UAAM,cAAc,SAAS;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,IAAA,CACT;AAED,UAAM,eAAe,SAAS;AAAA,MAC5B,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,iBAAiB;AAAA,IAAA,CAClB;AAGD,UAAM,gBAAgB,IAAI,EAAE;AAC5B,UAAM,iBAAiB,IAAI,EAAE;AAG7B,UAAM,oBAAoB,IAAI,KAAK;AACnC,UAAM,qBAAqB,IAAI,KAAK;AACpC,UAAM,oBAAoB,IAAI,KAAK;AAGnC,UAAM,oBAAoB,IAAI,KAAK;AACnC,UAAM,wBAAwB,IAAI,EAAE;AACpC,UAAM,UAAU,IAAI,IAAI;AAGxB,UAAM,oBAAoB,MAAM;AAC9B,UAAI,KAAK,OAAO;AACd,eAAO,OAAO,aAAa;AAAA,UACzB,MAAM,KAAK,MAAM,QAAQ;AAAA,UACzB,UAAU,KAAK,MAAM,YAAY;AAAA,UACjC,OAAO,KAAK,MAAM,SAAS;AAAA,UAC3B,OAAO,KAAK,MAAM,SAAS;AAAA,UAC3B,KAAK,KAAK,MAAM,OAAO;AAAA,UACvB,SAAS,KAAK,MAAM,WAAW;AAAA,UAC/B,UAAU,KAAK,MAAM,YAAY;AAAA,UACjC,SAAS,KAAK,MAAM,WAAW;AAAA,UAC/B,UAAU,KAAK,MAAM,YAAY;AAAA,UACjC,QAAQ,KAAK,MAAM,UAAU;AAAA,QAAA,CAC9B;AAAA,MACH;AAAA,IACF;AA2JA,UAAM,kBAAkB,CAAC,cAAc;AACrC,aAAO,CAAC,aAAa,UAAU,SAAS,gBAAgB;AAAA,IAC1D;AAoCA,UAAM,aAAa,CAAC,SAAS;AAC3B,UAAI,CAAC,KAAM,QAAO;AAClB,aAAO,IAAI,KAAK,IAAI,EAAE,mBAAA;AAAA,IACxB;AASA,UAAM,kBAAkB,CAAC,aAAa;AACpC,YAAM,cAAc;AAEpB,UAAI,UAAU;AACZ,eAAO,GAAG,WAAW;AAAA,MACvB;AAEA,aAAO,GAAG,WAAW;AAAA,IACvB;AAEA,UAAM,qBAAqB,CAAC,aAAa;AACvC,YAAM,cAAc;AAEpB,UAAI,UAAU;AACZ,eAAO,GAAG,WAAW;AAAA,MACvB;AAEA,aAAO,GAAG,WAAW;AAAA,IACvB;AAQA,UAAM,MAAM,MAAM;AAChB,wBAAA;AAAA,IACF,GAAG,EAAE,MAAM,MAAM;AAGjB,YAAQ;AAAA,MACN,OAAO,SAAS,MAAM,EAAE,eAAe,CAAC;AAAA,IAAA,CACzC;;;mBAtvBMA,eAAAC,WAAA,EAAA,OAAM,eAAW,MAAA,CAAA,sFAG8CC,MAAA,CAAA,EAAC,eAAA,CAAA,oEAClBA,MAAA,CAAA,EAAC,kBAAA,CAAA,sPAYrC,OAAKA,mBAAY,8CAA8C,mBAAmBA,MAAA,WAAA,EAAY,QAAI,MAAA,CAAA,8BAAA,kBAClG,OAAKA,MAAA,WAAA,EAAY,QAAI,aAAA;AAOV,YAAAC,mBAAAD,MAAA,UAAA,GAAA,EAAA,OAAM,UAAA,GAAS,MAAA,OAAA,CAAA;mKAUoCE,eAAAF,MAAA,WAAA,EAAY,QAAI,MAAA,8DAC3BE,eAAAF,MAAA,WAAA,EAAY,QAAQ;QAI0B,uEAAAA,WAAA,IAAA,MAAAA,mBAAM,YAAM;AAAA,QAA+F,+DAAAA,WAAA,IAAA,MAAAA,mBAAM,YAAM;AAAA,MAAA,mFAKtNE,iBAAAF,WAAA,IAAA,MAAAA,mBAAM,YAAM,WAAgBA,MAAA,CAAA,sBAAsBA,MAAA,CAAA,EAAC,kBAAA,CAAA;AAW5C,YAAAC,mBAAAD,MAAA,UAAA,GAAA,EAAA,OAAM,sBAAA,GAAqB,MAAA,OAAA,CAAA;+BACpCA,MAAA,CAAA,EAAC,uBAAA,CAAA,CAAA,WAAA;AAGE,UAAAA,MAAA,WAAA,EAAY,UAAM,CAAK,gBAAgBA,MAAA,WAAA,EAAY,MAAM,GAAA;;AAIpD,cAAAC,mBAAAD,MAAA,SAAA,GAAA,EAAA,OAAM,sBAAA,GAAqB,MAAA,OAAA,CAAA;iCACnCA,MAAA,CAAA,EAAC,uBAAA,CAAA,CAAA,WAAA;AAAA;;;uKAMgEA,MAAA,CAAA,EAAC,sBAAA,CAAA,wIAGjBA,MAAA,CAAA,EAAC,cAAA,CAAA,mEAE9CE,iBAAAF,WAAA,IAAA,MAAAA,mBAAM,UAAI,UAAeA,MAAA,CAAA,uBAAuBA,MAAA,CAAA,EAAC,gBAAA,CAAA,yHAIJA,MAAA,CAAA,EAAC,sBAAA,CAAA,sEACJ,YAAWA,WAAA,IAAA,MAAAA,mBAAM,SAAS,CAAA,yHAGvBA,MAAA,CAAA,EAAC,oBAAA,CAAA,sEACJ,YAAWA,WAAA,IAAA,MAAAA,mBAAM,SAAS,CAAA,mSAYZA,MAAA,CAAA,EAAC,uBAAA,CAAA,4MAOzDA,MAAA,CAAA,EAAC,cAAA,CAAA,gEAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,IAAI,gDAGjB,gBAAgBA,MAAA,aAAA,EAAc,IAAI,CAAA,KACzCG,cAAA,eAAaH,MAAA,CAAA,EAAC,0BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,MAAI;AACtB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,IAAI,CAAA,MAAA;AAAA;;;uIAOlBA,MAAA,CAAA,EAAC,kBAAA,CAAA,oEAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,QAAQ,gDAGrB,gBAAgBA,MAAA,aAAA,EAAc,QAAQ,CAAA,KAC7CG,cAAA,eAAaH,MAAA,CAAA,EAAC,8BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,UAAQ;AAC1B,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,QAAQ,CAAA,MAAA;AAAA;;;oIAOtBA,MAAA,CAAA,EAAC,eAAA,CAAA,uFAKOG,cAAA,SAAAH,MAAA,WAAA,EAAY,KAAK,iDAGlB,gBAAgBA,MAAA,aAAA,EAAc,KAAK,CAAA,KAC1CG,cAAA,eAAaH,MAAA,CAAA,EAAC,2BAAA,CAAA;AAIP,WAAAA,WAAA,IAAA,MAAAA,mBAAM,eAAa;;UACzB,OAAM;AAAA,UACL,OAAOA,MAAA,CAAA,EAAC,wBAAA;AAAA,QAAA;;;UAIT,OAAM;AAAA,UACL,OAAOA,MAAA,CAAA,EAAC,0BAAA;AAAA,QAAA;;;AAIN,UAAAA,MAAA,aAAA,EAAc,OAAK;AACvB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,KAAK,CAAA,MAAA;AAAA;;;oIAOnBA,MAAA,CAAA,EAAC,eAAA,CAAA,6BAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,KAAK,sCAElB,gBAAgBA,MAAA,aAAA,EAAc,KAAK,CAAA,KAC1CG,cAAA,eAAaH,MAAA,CAAA,EAAC,2BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,OAAK;AACvB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,KAAK,CAAA,MAAA;AAAA;;;sIAOnBA,MAAA,CAAA,EAAC,iBAAA,CAAA,+BAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,OAAO,uCAEpB,gBAAgBA,MAAA,aAAA,EAAc,OAAO,CAAA,KAC5CG,cAAA,eAAaH,MAAA,CAAA,EAAC,6BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,SAAO;AACzB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,OAAO,CAAA,MAAA;AAAA;;;uIAOrBA,MAAA,CAAA,EAAC,kBAAA,CAAA,gCAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,QAAQ,uCAErB,gBAAgBA,MAAA,aAAA,EAAc,QAAQ,CAAA,KAC7CG,cAAA,eAAaH,MAAA,CAAA,EAAC,8BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,UAAQ;AAC1B,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,QAAQ,CAAA,MAAA;AAAA;;;uIAOtBA,MAAA,CAAA,EAAC,kBAAA,CAAA,gCAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,QAAQ,uCAErB,gBAAgBA,MAAA,aAAA,EAAc,QAAQ,CAAA,KAC7CG,cAAA,eAAaH,MAAA,CAAA,EAAC,8BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,UAAQ;AAC1B,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,QAAQ,CAAA,MAAA;AAAA;;;sIAOtBA,MAAA,CAAA,EAAC,iBAAA,CAAA,+BAIKG,cAAA,SAAAH,MAAA,WAAA,EAAY,OAAO,sCAEpB,gBAAgBA,MAAA,aAAA,EAAc,OAAO,CAAA,KAC5CG,cAAA,eAAaH,MAAA,CAAA,EAAC,6BAAA,CAAA;AAER,UAAAA,MAAA,aAAA,EAAc,SAAO;AACzB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,OAAO,CAAA,MAAA;AAAA;;;wIAQvBA,MAAA,CAAA,EAAC,aAAA,CAAA,8DAMI,mBAAmBA,MAAA,aAAA,EAAc,GAAG,CAAA,KAC3CG,cAAA,eAAaH,MAAA,CAAA,EAAC,yBAAA,CAAA,KAHNE,eAAAF,MAAA,WAAA,EAAY,GAAG;AAKjB,UAAAA,MAAA,aAAA,EAAc,KAAG;AACrB,cAAA,0DAAAE,eAAAF,MAAA,aAAA,EAAc,GAAG,CAAA,MAAA;AAAA;;;8FAQTA,MAAA,iBAAA,CAAiB,IAAA,cAAA,EAAA,kJAAA;UAGhBA,MAAA,iBAAA,GAAiB;sCAAKA,MAAA,CAAA,EAAC,gBAAA,CAAA,CAAA,SAAA;AAAA;sCACnBA,MAAA,CAAA,EAAC,wBAAA,CAAA,CAAA,SAAA;AAAA;gQAS4CA,MAAA,CAAA,EAAC,kBAAA,CAAA,qKAM3DA,MAAA,CAAA,EAAC,0BAAA,CAAA,4EAIKG,cAAA,SAAAH,MAAA,YAAA,EAAa,eAAe,oDAG7B,gBAAgBA,MAAA,cAAA,EAAe,eAAe,CAAA,KACrDG,cAAA,eAAaH,MAAA,CAAA,EAAC,sCAAA,CAAA;AAER,UAAAA,MAAA,cAAA,EAAe,iBAAe;AAClC,cAAA,0DAAAE,eAAAF,MAAA,cAAA,EAAe,eAAe,CAAA,MAAA;AAAA;;;8LAQ5BA,MAAA,CAAA,EAAC,sBAAA,CAAA,wEAIKG,cAAA,SAAAH,MAAA,YAAA,EAAa,WAAW,oDAGzB,gBAAgBA,MAAA,cAAA,EAAe,WAAW,CAAA,KACjDG,cAAA,eAAaH,MAAA,CAAA,EAAC,kCAAA,CAAA;AAER,UAAAA,MAAA,cAAA,EAAe,aAAW;AAC9B,cAAA,0DAAAE,eAAAF,MAAA,cAAA,EAAe,WAAW,CAAA,MAAA;AAAA;;;+IAO1BA,MAAA,CAAA,EAAC,8BAAA,CAAA,4EAIKG,cAAA,SAAAH,MAAA,YAAA,EAAa,eAAe,oDAG7B,gBAAgBA,MAAA,cAAA,EAAe,eAAe,CAAA,KACrDG,cAAA,eAAaH,MAAA,CAAA,EAAC,0CAAA,CAAA;AAER,UAAAA,MAAA,cAAA,EAAe,iBAAe;AAClC,cAAA,0DAAAE,eAAAF,MAAA,cAAA,EAAe,eAAe,CAAA,MAAA;AAAA;;;;AAQZ,YAAAC,mBAAAD,MAAA,qBAAA,GAAA,EAAA,OAAM,sBAAA,GAAqB,MAAA,OAAA,CAAA;+BAC/CA,MAAA,CAAA,EAAC,+BAAA,CAAA,uFAQOA,MAAA,kBAAA,CAAkB,IAAA,cAAA;UAGjBA,MAAA,kBAAA,GAAkB;sCAAKA,MAAA,CAAA,EAAC,gBAAA,CAAA,CAAA,SAAA;AAAA;sCACpBA,MAAA,CAAA,EAAC,yBAAA,CAAA,CAAA,SAAA;AAAA;2SAS6CA,MAAA,CAAA,EAAC,qBAAA,CAAA,CAAA,iGAAA;AAKtC,YAAAC,mBAAAD,MAAA,uBAAA,GAAA,EAAA,OAAM,uBAAA,GAAsB,MAAA,OAAA,CAAA;6HAGmBA,MAAA,CAAA,EAAC,wBAAA,CAAA,iFAEpEA,MAAA,CAAA,EAAC,gCAAA,CAAA,8IAMDA,MAAA,CAAA,EAAC,wBAAA,CAAA;UAWVA,MAAA,iBAAA,GAAiB;;AASM,cAAAC,mBAAAD,MAAA,uBAAA,GAAA,EAAA,OAAM,4BAAA,GAA2B,MAAA,OAAA,CAAA;8FACOA,MAAA,CAAA,EAAC,wBAAA,CAAA,uFAG/DA,MAAA,CAAA,EAAC,6BAAA,CAAA,qCAGKA,MAAA,qBAAA,CAAqB,oBAE7BG,cAAA,eAAaH,MAAA,CAAA,EAAC,sCAAA,CAAA,8TAQVA,MAAA,CAAA,EAAC,eAAA,CAAA,oBAIQI,sBAAA,CAAAJ,MAAA,qBAAA,KAAyBA,MAAA,iBAAA,CAAiB,IAAA,cAAA,6GAGnDA,MAAA,iBAAA,IAAoBA,MAAA,CAAA,EAAC,gBAAA,IAAqBA,MAAA,CAAA,EAAC,eAAA,CAAA;;;;UAQ9CA,MAAA,OAAA,GAAO;6BAELK,eAAA,CAAAL,MAAA,OAAA,EAAQ,SAAI,YAAA,4BAAA,yBAAA,sDAAA,CAAA,MAEjBE,eAAAF,MAAA,OAAA,EAAQ,IAAI;;;;;;;;;;;;;;"}